---
tasks:
  c-stage1-linux:
    name: "C Stage 1"
    platform: ubuntu2004
    working_directory: c-tutorial/stage1
    build_targets:
    - "..."
  c-stage1-macos:
    name: "C Stage 1"
    platform: macos
    working_directory: c-tutorial/stage1
    build_targets:
    - "..."
  c-stage1-windows:
    name: "C Stage 1"
    platform: windows
    working_directory: c-tutorial/stage1
    build_targets:
    - "..."
  c-stage2-linux:
    name: "C Stage 2"
    platform: ubuntu2004
    working_directory: c-tutorial/stage2
    build_targets:
    - "..."
  c-stage2-macos:
    name: "C Stage 2"
    platform: macos
    working_directory: c-tutorial/stage2
    build_targets:
    - "..."
  c-stage2-windows:
    name: "C Stage 2"
    platform: windows
    working_directory: c-tutorial/stage2
    build_targets:
    - "..."
  c-stage3-linux:
    name: "C Stage 3"
    platform: ubuntu2004
    working_directory: c-tutorial/stage3
    build_targets:
    - "..."
  c-stage3-macos:
    name: "C Stage 3"
    platform: macos
    working_directory: c-tutorial/stage3
    build_targets:
    - "..."
  c-stage3-windows:
    name: "C Stage 3"
    platform: windows
    working_directory: c-tutorial/stage3
    build_targets:
    - "..."
  rules-linux:
    name: "Bazel Rules"
    platform: ubuntu2004
    working_directory: rules
    build_targets:
    - "..."
    - "-//starlark_configurations/read_attr_in_transition:will-break"
    # These targest are not supposed to build at the top level without flags being set
    - "-//starlark_configurations/cc_binary_selectable_copts:app_forgets_to_set_features"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_forgets_to_set_features_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_with_feature1_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_with_feature2_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:lib"
    # TODO(#160) renable this target when split_attr logic is released
    - "-//starlark_configurations/multi_arch_binary:foo"
    test_targets:
    - "..."
  rules-macos:
    name: "Bazel Rules"
    platform: macos
    working_directory: rules
    build_targets:
    - "..."
    - "-//starlark_configurations/read_attr_in_transition:will-break"
        # These targest are not supposed to build at the top level without flags being set
    - "-//starlark_configurations/cc_binary_selectable_copts:app_forgets_to_set_features"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_forgets_to_set_features_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_with_feature1_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_with_feature2_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:lib"
    # TODO(#160) renable this target when split_attr logic is released
    - "-//starlark_configurations/multi_arch_binary:foo"
    test_targets:
    - "..."
  rules-windows:
    name: "Bazel Rules"
    platform: windows
    working_directory: rules
    build_targets:
    - "..."
    - "-//starlark_configurations/read_attr_in_transition:will-break"
        # These targest are not supposed to build at the top level without flags being set
    - "-//starlark_configurations/cc_binary_selectable_copts:app_forgets_to_set_features"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_forgets_to_set_features_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_with_feature1_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:app_with_feature2_native_binary"
    - "-//starlark_configurations/cc_binary_selectable_copts:lib"
    # TODO(#160) renable this target when split_attr logic is released
    - "-//starlark_configurations/multi_arch_binary:foo"
    # TODO(bazel-team): Make runfiles examples work on Windows.
    - "-//runfiles/..."
    # TODO(bazel-team): Make //test_rule:80columns work on Windows
    # test_targets:
    # - "--"
    # - "..."
  tutorial-linux:
    name: "Bazel end-to-end example"
    platform: ubuntu1804
    working_directory: tutorial
    build_targets:
      - "//backend"
      - "//android"
  tutorial-macos:
    name: "Bazel end-to-end example"
    platform: macos
    working_directory: tutorial
    build_targets:
      - "//backend"
      - "//android"
      - "//ios-app"
  tutorial-windows:
    name: "Bazel end-to-end example"
    platform: windows
    working_directory: tutorial
    build_targets:
      - "//backend"
      - "//android"
